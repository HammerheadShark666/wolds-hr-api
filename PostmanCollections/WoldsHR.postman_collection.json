{
	"info": {
		"_postman_id": "c32e4871-45d6-4334-914e-5d70057f5a36",
		"name": "WoldsHR",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4654363"
	},
	"item": [
		{
			"name": "{{baseUrl}}/v1/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//var jsonData = JSON.parse(pm.responseBody);\r",
							"let jsonData = pm.response.json();   \r",
							"\r",
							"pm.environment.set(\"token\", jsonData.token);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"Test100@hotmail.com\",\r\n    \"password\": \"Password#1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/employees/search?keyword=john&page=1&pageSize=5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/employees/search?keyword=john&page=1&pageSize=5",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"employees",
						"search"
					],
					"query": [
						{
							"key": "keyword",
							"value": "john"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/employees/add",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							" \r",
							"pm.test('Schema validation', () => { \r",
							"  pm.response.to.have.jsonSchema (JSON.parse(pm.environment.get('employee_add_response_schema')));\r",
							"}); \r",
							"\r",
							"let jsonData = pm.response.json();   \r",
							"\r",
							"pm.environment.set(\"employeeId\", jsonData.id); \r",
							"\r",
							"pm.test(\"Is correct employee\", function () {       \r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get('employeeId'));\r",
							"    pm.expect(jsonData.firstName).to.eql(\"Robert\");\r",
							"    pm.expect(jsonData.surname).to.eql(\"Mason\");\r",
							"    pm.expect(jsonData.departmentId).to.eql(7);\r",
							"    pm.expect(jsonData.dateOfBirth).to.eql(\"2000-12-01\");\r",
							"    pm.expect(jsonData.hireDate).to.eql(\"2022-02-11\");\r",
							"    pm.expect(jsonData.email).to.eql(\"rmason@hotmail.com\");\r",
							"    pm.expect(jsonData.phoneNumber).to.eql(\"453427567567\");\r",
							"}); "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"dateOfBirth\": \"2000-12-01\",\r\n    \"departmentId\": 7, \r\n    \"email\": \"rmason@hotmail.com\",\r\n    \"firstName\": \"Robert\",\r\n    \"hireDate\": \"2022-02-11\",\r\n    \"id\": 0,\r\n    \"phoneNumber\": \"453427567567\",\r\n    \"photo\": \"\",\r\n    \"surname\": \"Mason\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/employees/add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"employees",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/employees/{{employeeId}} (Post Add)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Schema validation', () => { \r",
							"  pm.response.to.have.jsonSchema (JSON.parse(pm.environment.get('employee_get_response_schema')));\r",
							"}); \r",
							"\r",
							"let jsonData = pm.response.json();   \r",
							"\r",
							"pm.environment.set(\"employeeId\", jsonData.id); \r",
							"\r",
							"pm.test(\"Is correct employee\", function () {       \r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get('employeeId'));\r",
							"    pm.expect(jsonData.firstName).to.eql(\"Robert\");\r",
							"    pm.expect(jsonData.surname).to.eql(\"Mason\");\r",
							"    pm.expect(jsonData.departmentId).to.eql(7);\r",
							"    pm.expect(jsonData.dateOfBirth).to.eql(\"2000-12-01\");\r",
							"    pm.expect(jsonData.hireDate).to.eql(\"2022-02-11\");\r",
							"    pm.expect(jsonData.email).to.eql(\"rmason@hotmail.com\");\r",
							"    pm.expect(jsonData.phoneNumber).to.eql(\"453427567567\");\r",
							"}); "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/employees/employee/{{employeeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"employees",
						"employee",
						"{{employeeId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/employees/update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							" \r",
							"pm.test('Schema validation', () => { \r",
							"  pm.response.to.have.jsonSchema (JSON.parse(pm.environment.get('employee_add_response_schema')));\r",
							"}); \r",
							"\r",
							"let jsonData = pm.response.json();   \r",
							"\r",
							"pm.test(\"Is correct employee\", function () {       \r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get('employeeId'));\r",
							"    pm.expect(jsonData.firstName).to.eql(\"James\");\r",
							"    pm.expect(jsonData.surname).to.eql(\"Norse\");\r",
							"    pm.expect(jsonData.departmentId).to.eql(6);\r",
							"    pm.expect(jsonData.dateOfBirth).to.eql(\"2001-11-21\");\r",
							"    pm.expect(jsonData.hireDate).to.eql(\"2023-02-10\");\r",
							"    pm.expect(jsonData.email).to.eql(\"jnorse@hotmail.com\");\r",
							"    pm.expect(jsonData.phoneNumber).to.eql(\"234546745645\");\r",
							"}); "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{employeeId}}\",\r\n    \"dateOfBirth\": \"2001-11-21\",\r\n    \"departmentId\": 6, \r\n    \"email\": \"jnorse@hotmail.com\",\r\n    \"firstName\": \"James\",\r\n    \"hireDate\": \"2023-02-10\",\r\n    \"phoneNumber\": \"234546745645\",\r\n    \"photo\": \"\",\r\n    \"surname\": \"Norse\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/employees/update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"employees",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/employees/{{employeeId}} (Post Update)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Schema validation', () => { \r",
							"  pm.response.to.have.jsonSchema (JSON.parse(pm.environment.get('employee_get_response_schema')));\r",
							"}); \r",
							"\r",
							"let jsonData = pm.response.json();   \r",
							"\r",
							"pm.test(\"Is correct employee\", function () {       \r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get('employeeId'));\r",
							"    pm.expect(jsonData.firstName).to.eql(\"James\");\r",
							"    pm.expect(jsonData.surname).to.eql(\"Norse\");\r",
							"    pm.expect(jsonData.departmentId).to.eql(6);\r",
							"    pm.expect(jsonData.dateOfBirth).to.eql(\"2001-11-21\");\r",
							"    pm.expect(jsonData.hireDate).to.eql(\"2023-02-10\");\r",
							"    pm.expect(jsonData.email).to.eql(\"jnorse@hotmail.com\");\r",
							"    pm.expect(jsonData.phoneNumber).to.eql(\"234546745645\");\r",
							"}); "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/employees/employee/{{employeeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"employees",
						"employee",
						"{{employeeId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/employees/{{employeeId}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							" \r",
							"// pm.environment.set(\"employeeId\", \"\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/employees/{{employeeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"employees",
						"{{employeeId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/employees/{{employeeId}} (Post Delete)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/employees/employee/{{employeeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"employees",
						"employee",
						"{{employeeId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}employees/import",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Schema validation', () => { \r",
							"  pm.response.to.have.jsonSchema (JSON.parse(pm.environment.get('employees_imported_schema')));\r",
							"}); \r",
							"\r",
							"let jsonData = pm.response.json(); \r",
							"\r",
							"console.log(jsonData);\r",
							"\r",
							"let existingEmployees = jsonData.existingEmployees;\r",
							"let importedEmployees = jsonData.importedEmployees;\r",
							"let employeesErrorImporting = jsonData.employeesErrorImporting; \r",
							"   \r",
							"pm.test(\"Is correct existing employees\", function () {  \r",
							"\r",
							"    pm.expect(existingEmployees.length).to.eql(1);\r",
							"\r",
							"    let existingEmployee = existingEmployees[0];\r",
							"    pm.expect(existingEmployee).to.be.an(\"object\");\r",
							"\r",
							"    pm.expect(existingEmployee.id).to.eql(0);\r",
							"    pm.expect(existingEmployee.firstName).to.eql(\"John\");\r",
							"    pm.expect(existingEmployee.surname).to.eql(\"Miller\");\r",
							"    pm.expect(existingEmployee.departmentId).to.eql(3);\r",
							"    pm.expect(existingEmployee.dateOfBirth).to.eql(\"1966-03-21\");\r",
							"    pm.expect(existingEmployee.hireDate).to.eql(\"2021-05-19\");\r",
							"    pm.expect(existingEmployee.email).to.eql(\"jmiller@yahoo.com\");\r",
							"    pm.expect(existingEmployee.phoneNumber).to.eql(\"07572922290\");\r",
							"    pm.expect(existingEmployee.department).to.eql(null);\r",
							"    pm.expect(existingEmployee.wasImported).to.eql(false);\r",
							"    pm.expect(existingEmployee.photo).to.eql(\"\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Is correct imported employees\", function () {  \r",
							" \r",
							"    pm.expect(importedEmployees.employees.length).to.eql(10);\r",
							"\r",
							"    let importedEmployee = importedEmployees.employees[0];\r",
							"    pm.expect(importedEmployee).to.be.an(\"object\"); \r",
							" \r",
							"    pm.expect(importedEmployee.firstName).to.eql(\"Adam\");\r",
							"    pm.expect(importedEmployee.surname).to.eql(\"Barker\");\r",
							"    pm.expect(importedEmployee.departmentId).to.eql(2);\r",
							"    pm.expect(importedEmployee.dateOfBirth).to.eql(\"1982-04-13\");\r",
							"    pm.expect(importedEmployee.hireDate).to.eql(\"1982-04-13\");\r",
							"    pm.expect(importedEmployee.email).to.eql(\"smithdebra@yahoo.com\");\r",
							"    pm.expect(importedEmployee.phoneNumber).to.eql(\"07112128110\");\r",
							"    pm.expect(importedEmployee.department.id).to.eql(2);\r",
							"    pm.expect(importedEmployee.department.name).to.eql(\"IT\");\r",
							"    pm.expect(importedEmployee.wasImported).to.eql(true);\r",
							"    pm.expect(importedEmployee.photo).to.eql(\"\"); \r",
							"}); \r",
							"\r",
							"let ids = importedEmployees.employees.map(item => item.id);\r",
							"pm.environment.set(\"imported_employee_ids\", JSON.stringify(ids));\r",
							"pm.environment.set(\"imported_employee_current_index\", 0);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/D:/.Net 8 SD/react projects/wolds-hr/employee-imports.csv"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/employees/import",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"employees",
						"import"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Imported Employees",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let ids = JSON.parse(pm.environment.get(\"imported_employee_ids\") || \"[]\");\r",
							"let index = parseInt(pm.environment.get(\"imported_employee_current_index\") || \"0\");\r",
							"\r",
							"console.log(\"All IDs:\", ids);\r",
							"console.log(\"Current index:\", index);\r",
							"\r",
							"if (index < ids.length) {\r",
							"    let currentId = ids[index];\r",
							"    console.log(\"Deleting ID:\", currentId);\r",
							"    pm.environment.set(\"imported_employee_current_employee_id\", currentId);\r",
							"} else {\r",
							"    console.log(\"Done looping.\");\r",
							"    // Clean up\r",
							"    pm.environment.unset(\"imported_employee_ids\");\r",
							"    pm.environment.unset(\"imported_employee_current_index\");\r",
							"    pm.environment.unset(\"imported_employee_current_employee_id\");\r",
							"    pm.execution.setNextRequest(null); // stop the loop\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let index = parseInt(pm.environment.get(\"imported_employee_current_index\") || \"0\");\r",
							"pm.environment.set(\"imported_employee_current_index\", index + 1);\r",
							"\r",
							"const ids = JSON.parse(pm.environment.get(\"imported_employee_ids\") || \"[]\");\r",
							"\r",
							"if (index + 1 < ids.length) {\r",
							"    pm.execution.setNextRequest(\"Delete Imported Employees\");\r",
							"} else {\r",
							"    pm.environment.unset(\"imported_employee_ids\");\r",
							"    pm.environment.unset(\"imported_employee_current_index\");\r",
							"    pm.environment.unset(\"imported_employee_current_employee_id\");\r",
							"    pm.execution.setNextRequest(null); // end\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/employees/{{imported_employee_current_employee_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"employees",
						"{{imported_employee_current_employee_id}}"
					]
				}
			},
			"response": []
		}
	]
}